           if (letter == '+') 
                addOperator(startLocation, OP_ADD, String.valueOf(letter));
            else if (word == "-") 
                symbols.add(new Symbol(startLocation, endLocation, OP_SUB, word));
            else if (word == "*") 
                symbols.add(new Symbol(startLocation, endLocation, OP_MUL, word));
            else if (word == "/") 
                symbols.add(new Symbol(startLocation, endLocation, OP_DIV, word));
            else if (word == "%") 
                symbols.add(new Symbol(startLocation, endLocation, OP_MOD, word));
            else if (word == "&") 
                symbols.add(new Symbol(startLocation, endLocation, OP_AND, word));
            else if (word == "|") 
                symbols.add(new Symbol(startLocation, endLocation, OP_OR, word));
            else if (word == "!") 
                symbols.add(new Symbol(startLocation, endLocation, OP_NOT, word));
            else if (word == "==") 
                symbols.add(new Symbol(startLocation, endLocation, OP_EQ, word));
            else if (word == "!=") 
                symbols.add(new Symbol(startLocation, endLocation, OP_NEQ, word));
            else if (word == "<") 
                symbols.add(new Symbol(startLocation, endLocation, OP_LT, word));
            else if (word == ">") 
                symbols.add(new Symbol(startLocation, endLocation, OP_GT, word));
            else if (word == "<=") 
                symbols.add(new Symbol(startLocation, endLocation, OP_LEQ, word));
            else if (word == ">=") 
                symbols.add(new Symbol(startLocation, endLocation, OP_GEQ, word));
            else if (word == "(") 
                symbols.add(new Symbol(startLocation, endLocation, OP_LPARENT, word));
            else if (word == ")") 
                symbols.add(new Symbol(startLocation, endLocation, OP_RPARENT, word));
            else if (word == "[") 
                symbols.add(new Symbol(startLocation, endLocation, OP_LBRACKET, word));
            else if (word == "]") 
                symbols.add(new Symbol(startLocation, endLocation, OP_RBRACKET, word));
            else if (word == "{") 
                symbols.add(new Symbol(startLocation, endLocation, OP_LBRACE, word));
            else if (word == "}") 
                symbols.add(new Symbol(startLocation, endLocation, OP_RBRACE, word));
            else if (word == ":") 
                symbols.add(new Symbol(startLocation, endLocation, OP_COLON, word));
            else if (word == ";") 
                symbols.add(new Symbol(startLocation, endLocation, OP_SEMICOLON, word));
            else if (word == ".") 
                symbols.add(new Symbol(startLocation, endLocation, OP_DOT, word));
            else if (word == ",") 
                symbols.add(new Symbol(startLocation, endLocation, OP_COMMA, word));
            else if (word == "=") 
                symbols.add(new Symbol(startLocation, endLocation, OP_ASSIGN, word));